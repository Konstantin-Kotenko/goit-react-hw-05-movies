{"version":3,"file":"static/js/927.d152c761.chunk.js","mappings":"qLAGaA,E,MAAMC,GAAAA,OAAa,CAC9BC,QCJsB,+BDKtBC,OAAQ,CACNC,QCLmB,uC,kJCCVC,EAAY,mCAAG,WAAMC,GAAN,kGAEDN,EAAAA,EAAAA,IAAA,gBAAiBM,IAFhB,uBAEhBC,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,gCAKxBC,QAAQC,IAAR,MALwB,yDAAH,sD,gDCAnBC,EAAOC,EAAAA,GAAAA,GAAH,mFAMJC,EAAOD,EAAAA,GAAAA,GAAH,oGAOGE,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OACE,SAACJ,EAAD,UACGI,EAAOC,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAP,OACV,SAACJ,EAAD,CAAeN,GAAIA,EAAnB,SACGU,GADQV,SChBbW,EAAYN,EAAAA,GAAAA,IAAH,0CAITO,EAAQP,EAAAA,GAAAA,IAAH,yGAOLQ,EAAOR,EAAAA,GAAAA,EAAH,6CAIJS,EAAOT,EAAAA,GAAAA,KAAH,6CAIGU,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1Bd,QAAQC,IAAIa,GACZ,IAAQC,EACND,EADMC,MAAOC,EACbF,EADaE,YAAaC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,SAAUZ,EAClDQ,EADkDR,OAAQa,EAC1DL,EAD0DK,aAE5D,OACE,+BACE,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IAAG,yCAAoCJ,GACvCK,IAAKN,KAEP,4BACE,0BACGA,EADH,IACW,IAAIO,KAAKH,GAAcI,cADlC,QAGA,UAACZ,EAAD,YACE,SAACC,EAAD,uBACCK,MAEH,UAACN,EAAD,YACE,SAACC,EAAD,wBACA,kBACCM,MAEH,SAACN,EAAD,qBACCN,IAAU,SAACD,EAAD,CAAQC,OAAQA,aC5C/BG,EAAYN,EAAAA,GAAAA,IAAH,6DAKTqB,GAAOrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,8EAKJuB,EAASvB,EAAAA,GAAAA,OAAH,6fAoBCwB,EAAoB,WAAO,IAAD,EAC/BC,EAAQ,WAAGC,EAAAA,EAAAA,MAAcC,aAAjB,aAAG,EAAqBC,KAEtC,OACE,UAAC,EAAD,YACE,SAACP,EAAD,CAAMQ,GAAI,OAAQF,MAAO,CAAEC,KAAMH,GAAjC,UACE,SAACF,EAAD,sBAEF,SAACF,EAAD,CAAMQ,GAAI,UAAWF,MAAO,CAAEC,KAAMH,GAApC,UACE,SAACF,EAAD,4BCnCFA,EAASvB,EAAAA,GAAAA,OAAH,6fA6CZ,EAzBqB,WAAO,IAAD,IACzB,GAAwB8B,EAAAA,EAAAA,UAAS,IAAjC,eAAOlC,EAAP,KAAamC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBADDR,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,OANAO,EAAAA,EAAAA,YAAU,WACRzC,EAAasC,GAASI,MAAK,SAAAxC,GACzBmC,EAAQnC,QAET,CAACoC,KAGF,iCACE,SAAC,KAAD,CAAMH,GAAIK,EAAV,UACE,SAAC,EAAD,gCAEF,SAACxB,EAAD,CAAWC,MAAOf,KAClB,SAAC4B,EAAD,KACA,SAAC,KAAD","sources":["api/api.js","constants/apiService.js","api/getDataMovie.js","components/MovieData/Genres/Genres.jsx","components/MovieData/MovieData.jsx","components/MovieDetailsAction/MovieDetailAction.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants/apiService';\n\nexport const api = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n","export const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '9b83de628d16dffe4523b57f7d3aefed';\n","import { api } from './api';\n\nexport const getDataMovie = async id => {\n  try {\n    const { data } = await api.get(`movie/${id}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  padding-left: 0;\n`;\n\nconst Item = styled.li`\n  font-weight: 400;\n  &:not(: last-child) {\n    margin-right: 15px;\n  }\n`;\n\nexport const Genres = ({ genres }) => {\n  return (\n    <List>\n      {genres.map(({ id, name }) => (\n        <Item key={id} id={id}>\n          {name}\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { Genres } from './Genres/Genres';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Image = styled.img`\n  border-radius: 4px;\n  margin-right: 15px;\n  width: 250px;\n  height: 350px;\n`;\n\nconst Text = styled.p`\n  font-weight: 400;\n`;\n\nconst Span = styled.span`\n  font-weight: 700;\n`;\n\nexport const MovieData = ({ movie }) => {\n  console.log(movie);\n  const { title, poster_path, vote_average, overview, genres, release_date } =\n    movie;\n  return (\n    <>\n      <Container>\n        <Image\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <Text>\n            <Span>Rated : </Span>\n            {vote_average}\n          </Text>\n          <Text>\n            <Span>Overview</Span>\n            <br />\n            {overview}\n          </Text>\n          <Span>Genres</Span>\n          {genres && <Genres genres={genres} />}\n        </div>\n      </Container>\n    </>\n  );\n};\n","import { useLocation, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n`;\n\nconst Link = styled(NavLink)`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\nconst Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: rgb(63, 81, 181);\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -1px,\n    rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieDetailAction = () => {\n  const location = useLocation().state?.from;\n\n  return (\n    <Container>\n      <Link to={'cast'} state={{ from: location }}>\n        <Button>Cast</Button>\n      </Link>\n      <Link to={'reviews'} state={{ from: location }}>\n        <Button>Reviews</Button>\n      </Link>\n    </Container>\n  );\n};\n","import { getDataMovie } from 'api/getDataMovie';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { MovieData } from '../../components/MovieData';\nimport { MovieDetailAction } from '../../components/MovieDetailsAction';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: rgb(63, 81, 181);\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 4px -1px,\n    rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [data, setData] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getDataMovie(movieId).then(data => {\n      setData(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <Button>Back to movies</Button>\n      </Link>\n      <MovieData movie={data} />\n      <MovieDetailAction />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","params","api_key","getDataMovie","id","data","console","log","List","styled","Item","Genres","genres","map","name","Container","Image","Text","Span","MovieData","movie","title","poster_path","vote_average","overview","release_date","src","alt","Date","getFullYear","Link","NavLink","Button","MovieDetailAction","location","useLocation","state","from","to","useState","setData","movieId","useParams","backLinkHref","useEffect","then"],"sourceRoot":""}